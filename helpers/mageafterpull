#!/bin/bash
PWD="$(pwd)"
SCRIPT=$(readlink -f "$0")
BASEDIR="$( cd "$(dirname "$SCRIPT")" ; pwd -P )"
COMPOSER="$(command -v composer)"
MAGEVERSION=0

#check Magento version
if [ -f "$PWD/app/etc/local.xml" ]; then
  #Magento 1
  echo "Detected Magento Version 1.x"
  MAGERUN="$BASEDIR/magerun"
  MAGEVERSION=1
elif [ -f "$PWD/app/etc/env.php" ]; then
  #Magento 2
  echo "Detected Magento Version 2.x"
  MAGERUN="$BASEDIR/magerun2"
  MAGEVERSION=2
else
  echo "Could not detect Magento Version"
  echo "Ensure that you run the mageclean command from the Magento site root."
fi

#if we found a magento version, run this
if [ $MAGEVERSION != 0 ]; then
  #look for composer.json
  if [ -f "$PWD/composer.json" ]; then
    if [ -x "$COMPOSER" ]; then
      echo "Attempting composer self-update"
      "$COMPOSER" self-update
      echo "Detected composer.json file, running composer install"
      "$COMPOSER" install
    else
      echo "Detected composer.json file, but composer does not seem to be installed"
    fi
  fi

  #rebuild magento 2
  if [ $MAGEVERSION == 2 ]; then
    if [ -f "$PWD/vendor/bin/ece-tools" ]; then
      echo "Detected Magento Cloud ECE Tools"
      echo "Running vendor/bin/ece-tools patch -n"
      "$PWD/vendor/bin/ece-tools" patch -n
    fi

    echo "Running bin/magento setup:upgrade && bin/magento setup:di:compile"
    "$PWD/bin/magento" setup:upgrade
    "$PWD/bin/magento" setup:di:compile

    #check for .idea folder and build URN data if needed
    if [ -d "$PWD/.idea" ]; then
      echo "Detected J Idea / PhpStorm .idea folder, generating URN data"
      "$PWD/bin/magento" dev:urn-catalog:generate .idea/misc.xml
    fi
  fi

  #clear caches
  echo "Clearing caches via mageclean helper"
  "$BASEDIR/mageclean" >> /dev/null
fi

echo "Done!"